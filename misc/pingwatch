#!/usr/bin/python3

## tkooda : 2011-03-17 : pingwatch : display changes in availability on console

import os
import sys
import subprocess
import time


def bail( str, err = 1 ):
    sys.stderr.write( str )
    sys.exit( err )


if len( sys.argv ) < 2:
    bail( "Usage: %s <host..>\n" % sys.argv[ 0 ] )

sleep_env = os.environ.get( "SLEEP" )
if sleep_env:
	sleep = int( sleep_env )
else:
	sleep = 5

if os.environ.get( "DEBUG" ):
	debug = True
else:
	debug = False

hosts = {}
for host in sys.argv[ 1: ]:
	hosts[ host ] = ( False, 0, 0 )
	if os.environ.get( "DNS_QUERY" ):
		subprocess.call( "host -t a '%s'" % host, shell=True )

print( time.strftime( "%F %T" ), "watching:", " ".join( sys.argv[ 1: ] ) )


try:

	while True:
		outbuf = subprocess.Popen( [ "fping", "-u", "-r", "1" ] + sys.argv[ 1: ],
								   stdout=subprocess.PIPE,
								   stderr=subprocess.PIPE ).communicate()[ 0 ] 
		for host in hosts.keys():
			if host in outbuf.split():
				if hosts[ host ][0] or not hosts[ host ][1]:
					print( time.strftime( "%F %T"), "down:", host, )
					if hosts[ host ][1]:
						print( " (#%d, was up for %d seconds, since %s)" % ( hosts[ host ][2], time.time() - hosts[ host ][1], time.strftime( "%T", time.localtime( hosts[ host ][1] ) ) ) )
					else:
						print()
					hosts[ host ] = ( False, time.time(), hosts[ host ][2] )
				else:
					if debug:
						print( "DEBUG: still down:", host )
			else:
				if not hosts[ host ][0] or not hosts[ host ][1]:
					print( time.strftime( "%F %T"), "up:", host, )
					if hosts[ host ][1]:
						print( " (#%d, was down for %d seconds, since %s)" % ( hosts[ host ][2], time.time() - hosts[ host ][1], time.strftime( "%T", time.localtime( hosts[ host ][1] ) ) ) )
					else:
						print()
					hosts[ host ] = ( True, time.time(), hosts[ host ][2] + 1 )
				else:
					if debug:
						print( "DEBUG: still up:", host )
		sys.stdout.flush()
		time.sleep( sleep )
except KeyboardInterrupt:
	pass
except:
	import traceback
	traceback.print_exc( file=sys.stderr )
	sys.stderr.flush()
